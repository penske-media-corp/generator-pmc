version: "3.7"

services:

  # php-fpm service & wordpress application code
  wp:
    build:
      context: https://github.com/penske-media-corp/alpine-wordpress.git
      target: wp
      args:
        NGINX_VERSION: "<%= NGINX_VERSION %>"
        NODE_VERSION: "<%= NODE_VERSION %>"
        PHP_VERSION: "<%= PHP_VERSION%>"
        WEB_ROOT: "<%= WEB_ROOT %>"
        WORDPRESS_VERSION: "<%= WORDPRESS_VERSION %>"
    depends_on:
      - db
    env_file: docker-compose.env
    networks:
      - back
      - front
    restart: always
    volumes:
      - "<%= CACHE_DIR %>/www:<%= WWW_DIR %>:rw"
      - "./:<%= WEB_ROOT/wp-content/themes/%<= WORDPRESS_THEME %>:rw"
    working_dir: "<%= WEB_ROOT %>"

  # nginx service only
  server:
    build:
      context: https://github.com/penske-media-corp/alpine-wordpress.git
      target: server
      args:
        NGINX_VERSION: "<%= NGINX_VERSION %>"
        NODE_VERSION: "<%= NODE_VERSION %>"
        PHP_VERSION: "<%= PHP_VERSION %>"
        WEB_ROOT: "<%= WEB_ROOT %>"
        WORDPRESS_VERSION: "<%= WORDPRESS_VERSION %>"
    depends_on:
      - wp
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:<%= WORDPRESS_DOMAIN %>"
    links:
      - wp
    networks:
      - back
      - front
      - pmc-dev_default
    ports:
      - 80
      - 443
    restart: always
    volumes:
      - "<%= CACHE_DIR %>:<%= WWW_DIR %>:rw"

  cli:
    build:
      context: https://github.com/penske-media-corp/alpine-wordpress.git
      target: cli
      args:
        NGINX_VERSION: "<%= NGINX_VERSION %>"
        NODE_VERSION: "<%= NODE_VERSION %>"
        PHP_VERSION: "<%= PHP_VERSION %>"
        WEB_ROOT: "<%= WEB_ROOT %>"
        WORDPRESS_VERSION: "<%= WORDPRESS_VERSION %>"
    command: >
      sh -c "wget -O - https://raw.githubusercontent.com/penske-media-corp/alpine-wordpress/master/_ss/wp-cli/_ss-install-wp.sh | sh"
    env_file: docker-compose.env
    networks:
      - back
    volumes:
      - "<%= CACHE_DIR %>/www:<%= WWW_DIR %>:rw"
      - "./:<%= WEB_ROOT %>/wp-content/themes/<%= WORDPRESS_THEME %>:rw"
    working_dir: "<%= WEB_ROOT %>/wp-content/themes/<%= WORDPRESS_THEME %>"

  db:
    env_file: docker-compose.env
    image: mariadb:<%= DB_VERSION %>
    networks:
      - back
    restart: always
    volumes:
      - "<%= MYSQL_VOLUMES %>/db:/var/lib/mysql"

  cache:
    image: "memcached:<%= MEMCACHED_VERSION %>-alpine"
    networks:
      - back

  build-npm:
    build:
      context: https://github.com/penske-media-corp/alpine-wordpress.git
      target: build-npm
      args:
        NGINX_VERSION: "<%= NGINX_VERSION %>"
        NODE_VERSION: "<%= NODE_VERSION %>"
        PHP_VERSION: "<%= PHP_VERSION %>"
        WEB_ROOT: "<%= WEB_ROOT %>"
        WORDPRESS_VERSION: "<%= WORDPRESS_VERSION %>"
    command: >
      sh -c "yarn install --non-interactive --verbose"
    restart: on-failure
    volumes:
      - "./:<%= WEB_ROOT %>"
    working_dir: "<%= WEB_ROOT %>"

  build-php:
    command: >
      sh -c "composer install -vvv"
    env_file: docker-compose.env
    environment:
      - <%- "COMPOSER_AUTH=$COMPOSER_AUTH %>"
    image: "composer:<%= COMPOSER_VERSION %>"
    restart: on-failure
    volumes:
      - "./:<%= WEB_ROOT %>"
      - "<%= CACHE_DIR %>/composer:<%= COMPOSER_CACHE_DIR %>"
      - "<%= CACHE_DIR %>/config/composer:<%= COMPOSER_HOME %>"
    working_dir: "<%= WEB_ROOT %>"

  test-npm:
    build:
      context: https://github.com/penske-media-corp/alpine-wordpress.git
      target: test-npm
      args:
        NGINX_VERSION: "<%= NGINX_VERSION %>"
        NODE_VERSION: "<%= NODE_VERSION %>"
        PHP_VERSION: "<%= PHP_VERSION %>"
        WEB_ROOT: "<%= WEB_ROOT %>"
        WORDPRESS_VERSION: "<%= WORDPRESS_VERSION %>"
    command: >
      sh -c "wget -O - https://raw.githubusercontent.com/penske-media-corp/alpine-wordpress/master/_ss/npm/_ss-run-npm-ci.sh | sh"
    env_file: docker-compose.env
    restart: on-failure
    volumes:
      - "./:<%= WEB_ROOT %>"
    working_dir: "<%= WEB_ROOT %>"

  test-php:
    build:
      context: https://github.com/penske-media-corp/alpine-wordpress.git
      target: test-php
      args:
        NGINX_VERSION: "<%= NGINX_VERSION %>"
        NODE_VERSION: "<%= NODE_VERSION %>"
        PHP_VERSION: "<%= PHP_VERSION %>"
        WEB_ROOT: "<%= WEB_ROOT %>"
        WORDPRESS_VERSION: "<%= WORDPRESS_VERSION %>"
    # Defines where WP is installed
    command: >
      sh -c "wget --no-cache -O - https://raw.githubusercontent.com/penske-media-corp/alpine-wordpress/master/_ss/global/_ss-setup-diff.sh | sh \
             && wget --no-cache -O - https://raw.githubusercontent.com/penske-media-corp/alpine-wordpress/master/_ss/php/_ss-run-phplint.sh | sh \
             && wget --no-cache -O - https://raw.githubusercontent.com/penske-media-corp/alpine-wordpress/master/_ss/php/_ss-run-phpcs.sh | sh \
             && wget --no-cache -O - https://raw.githubusercontent.com/penske-media-corp/alpine-wordpress/master/_ss/php/_ss-setup-xdebug.sh | sh \
             && wget --no-cache -O - https://raw.githubusercontent.com/penske-media-corp/alpine-wordpress/master/_ss/php/_ss-setup-phpunit.sh | sh \
             && wget --no-cache -O - https://raw.githubusercontent.com/penske-media-corp/alpine-wordpress/master/_ss/php/_ss-run-<% if(PARATEST) { %>paratest.sh <% } else { %>phpunit.sh<% } %> | sh \
             && wget --no-cache -O - https://raw.githubusercontent.com/penske-media-corp/alpine-wordpress/master/_ss/php/_ss-run-codecov.sh | sh"
    depends_on:
      - test-db
    environment:
      - <%- "COMPOSER_AUTH=$COMPOSER_AUTH %>"
    env_file: docker-compose.env
    environment:
      - <%- "CODECOV_AUTH_TOKEN=$CODECOV_AUTH_TOKEN %>"
    networks:
      - test-back
    restart: on-failure
    volumes:
      - "<%= CACHE_DIR %>/www:<%= WWW_DIR %>:rw"
      - "./:<%= WEB_ROOT %>/wp-content/themes/<%= WORDPRESS_THEME %>:rw"
    working_dir: "<%= WEB_ROOT %>/wp-content/themes/<%= WORDPRESS_THEME %>"

  test-db:
    image: mariadb:<%= DB_VERSION %>
    env_file: docker-compose.env
    networks:
      - test-back
    restart: always
    volumes:
      - "<%= MYSQL_VOLUMES %>/test-db:/var/lib/mysql"

networks:
  back:
  front:
  pmc-dev_default:
    external: true
  test-back:
